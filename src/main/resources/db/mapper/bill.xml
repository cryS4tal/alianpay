<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylli.api.pay.mapper.BillMapper">
    <resultMap id="billMap" type="com.ylli.api.pay.model.Bill"/>
    <resultMap id="dataMap" type="com.ylli.api.sys.model.Data"/>
    <resultMap id="cateMap" type="com.ylli.api.pay.model.CategoryData"/>

    <select id="getBills" resultMap="billMap">
        SELECT
        *
        FROM t_bill
        <where>
            <if test="mch_ids != null">
                mch_id IN
                <foreach item="item" collection="mch_ids" open="(" close=")" separator=",">
                    ${item}
                </foreach>
            </if>
            <if test="status != null">
                AND status = ${status}
            </if>
            <if test="mch_order_id != null">
                AND mch_order_id = #{mch_order_id}
            </if>
            <if test="sys_order_id != null">
                AND sys_order_id = #{sys_order_id}
            </if>
            <if test="pay_type != null">
                AND pay_type = #{pay_type}
            </if>
            <if test="trade_time != null">
                AND DAYOFYEAR(trade_time) = DAYOFYEAR(NOW())
            </if>
            <if test="start_time != null">
                AND create_time >= #{start_time}
            </if>
            <if test="end_time != null">
                AND create_time &lt; #{end_time}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="getHourlyData" resultMap="dataMap">
        SELECT
        SUM(money) as sum,
        COUNT(*) as count,
        status as `status`,
        EXTRACT(
        HOUR
        FROM
        DATE_ADD(create_time, INTERVAL 8 HOUR)
        ) as `hour`
        FROM
        t_bill
        <where>
            DATE_ADD(
            create_time,
            INTERVAL 8 HOUR
            ) > CURDATE()
            <if test="mch_id != null">
                AND mch_id = ${mch_id}
            </if>
        </where>
        GROUP BY
        status,
        EXTRACT(
        HOUR
        FROM
        DATE_ADD(create_time, INTERVAL 8 HOUR)
        )
    </select>

    <select id="getDayData" resultMap="dataMap">
        SELECT
        SUM(money) AS sum,
        COUNT(*) AS count,
        `status`
        FROM
        t_bill
        <where>
            create_time > DATE_ADD(CURDATE(), INTERVAL -8 HOUR)
            <if test="mch_id != null">
                AND mch_id = ${mch_id}
            </if>
        </where>
        GROUP BY `status`
    </select>

    <select id="selectTotalMoney" resultType="java.lang.Long">
        SELECT
        SUM(money)
        FROM
        t_bill
        <where>
            `status` = 3
            <if test="mch_id != null">
                AND mch_id = ${mch_id}
            </if>
        </where>
    </select>

    <select id="selectChargeMoney" resultType="java.lang.Long">
        SELECT
        SUM(pay_charge)
        FROM
        t_bill
        <where>
            `status` = 3
            <if test="mch_id != null">
                AND mch_id = ${mch_id}
            </if>
        </where>
    </select>

    <select id="rate" resultMap="dataMap">
        SELECT
	      `status`,
	      EXTRACT(
		    HOUR
		    FROM
			DATE_ADD(create_time, INTERVAL 8 HOUR)
	      ) AS `hour`,
	      COUNT(*) AS `count`
        FROM
	      t_bill
	    <where>
            DATE_ADD(create_time, INTERVAL 8 HOUR) > CURDATE()
            <if test="mch_id != null">
                AND mch_id = ${mch_id}
            </if>
            <if test="channel_id != null">
                AND channel_id = ${channel_id}
            </if>
            <if test="app_id != null">
                AND app_id = ${app_id}
            </if>
        </where>
        GROUP BY
	      `status`,
	      EXTRACT(
		    HOUR
		    FROM
			DATE_ADD(create_time, INTERVAL 8 HOUR)
	      )
    </select>

    <select id="getOrders" resultMap="billMap">
        SELECT
        t_bill.*
        FROM t_bill
        <if test="nick_name != null or phone != null">
            LEFT JOIN t_user_base ON t_bill.qr_owner = t_user_base.mch_id
        </if>
        <where>
            t_bill.channel_id = 9
            <if test="auth_id != null">
                AND t_bill.qr_owner = ${auth_id}
            </if>
            <if test="nick_name != null">
                <bind name="name_like_ext" value="nick_name + '%'" />
                AND t_user_base.mch_name LIKE #{name_like_ext}
            </if>
            <if test="phone != null">
                AND t_user_base.link_phone = #{phone}
            </if>
            <if test="status != null">
                AND t_bill.status = ${status}
            </if>
            <if test="mch_order_id != null">
                AND t_bill.mch_order_id = #{mch_order_id}
            </if>
            <if test="sys_order_id != null">
                AND t_bill.sys_order_id = #{sys_order_id}
            </if>

            <if test="start_time != null">
                AND t_bill.create_time >= #{start_time}
            </if>
            <if test="end_time != null">
                AND t_bill.create_time &lt; #{end_time}
            </if>
        </where>
        ORDER BY t_bill.create_time DESC
    </select>

    <select id="category" resultMap="cateMap">
        SELECT
        IFNULL(SUM(msg), 0) AS 'money',
        channel_id,
        mch_id,
        IF (STATUS = 3, 1, 0) AS 'success'
        FROM
        t_bill
        <where>
            create_time > #{time}
            <if test="channel_id != null">
                AND channel_id = ${channel_id}
            </if>
            <if test="mch_id != null">
                AND mch_id = ${mch_id}
            </if>
            <if test="status != null">
                AND IF(status = 3, 3, 4) = ${status}
            </if>
        </where>
        <if test="groupby == 1">
            GROUP BY
            channel_id
        </if>
        <if test="groupby == 2">
            GROUP BY
            mch_id
        </if>
        <if test="groupby == 4">
            GROUP BY
            IF (STATUS = 3, 1, 0)
        </if>
        <if test="groupby == 3">
            GROUP BY
            channel_id,
            mch_id
        </if>
        <if test="groupby == 5">
            GROUP BY
            channel_id,
            IF (STATUS = 3, 1, 0)
        </if>
        <if test="groupby == 6">
            GROUP BY
            mch_id,
            IF (STATUS = 3, 1, 0)
        </if>
        <if test="groupby == 7">
            GROUP BY
            channel_id,
            mch_id,
            IF (STATUS = 3, 1, 0)
        </if>
    </select>

</mapper>